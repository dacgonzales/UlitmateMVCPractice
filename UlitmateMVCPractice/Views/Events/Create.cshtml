@model UlitmateMVCPractice.Models.Event

@{
    
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
   
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(function () {
        $("#evtDate").datetimepicker();
    });
    </script>



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-offset-2 col-md-8 col-md-offset-2">
                <h4>Create Event</h4>
                <hr />
            </div>            
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group col-md-offset-2 col-md-8 col-md-offset-2">
                @Html.LabelFor(model => model.Eventname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.Eventname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Eventname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-offset-2 col-md-8 col-md-offset-2">
                @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="evtDate">
                    @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })                   
                    @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-offset-2 col-md-8 col-md-offset-2">
                @Html.LabelFor(model => model.EventVenue, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.EventVenue, new { htmlAttributes = new { @class = "form-control" } })
                    
                    @Html.ValidationMessageFor(model => model.EventVenue, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>

</html>
